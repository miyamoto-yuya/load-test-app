"""
Django settings for memo_app project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8!+p@(-b0gm$x#m4prd+9mqgl_*bt1z@4_-hn_dx1j&n)0be+x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '*',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'notes',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'memo_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'memo_app.wsgi.application'

CLOUDFRONT_DOMAIN = 'd3frbia05vuxtx.cloudfront.net'
CSRF_TRUSTED_ORIGINS = [f"https://{CLOUDFRONT_DOMAIN}"]

#cache
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"redis://{os.getenv('REDIS_HOST', 'redis')}:{os.getenv('REDIS_PORT', '6379')}/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# DB の種類を環境変数で指定（RDS / DocumentDB / DynamoDB）
DB_SERVICE = os.getenv("DB_SERVICE", "RDS")

if DB_SERVICE == "RDS":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.getenv('DB_NAME', 'your_db_name'),
            'USER': os.getenv('DB_USER', 'your_user'),
            'PASSWORD': os.getenv('DB_PASSWORD', 'your_password'),
            'HOST': os.getenv('DB_HOST', 'your-db-host'),
            'PORT': '3306',
        }
    }

elif DB_SERVICE == "DocumentDB":
    MONGODB_DATABASES = {
        'default': {
            'name': os.getenv('DB_NAME', 'sqlite3'),
            'host': os.getenv('DB_HOST', 'my-cluster.cluster-xxxxxx.us-west-2.docdb.amazonaws.com'),
            'password': os.getenv('DB_PASSWORD', 'django'),
            'username': os.getenv('DB_USER', 'django'),
        }
    }
    INSTALLED_APPS += ["django_mongoengine"]
    SESSION_ENGINE = 'django_mongoengine.sessions'
    SESSION_SERIALIZER = 'django_mongoengine.sessions.BSONSerializer'

else:  # DynamoDB
    DATABASES = {}  # Django ORM を使わない
    # boto3 を使用する DynamoDB 設定はアプリ内部で管理

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#AUTH_USER_MODEL = 'notes.User'
# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATICFILES_DIRS = [
    BASE_DIR / "notes" / "static",
]

# import boto3

# # DynamoDB クライアントの設定
# dynamodb = boto3.resource(
#     'dynamodb',
#     region_name = os.getenv('AWS_DEFAULT_REGION', 'ap-northeast-1'),
# )
# table = dynamodb.Table(os.getenv('DYNAMODB_TABLE', 'stress-test-dynamodb'))
